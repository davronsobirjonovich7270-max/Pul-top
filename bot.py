import os
import time
import requests
import telebot
from threading import Thread

TOKEN = os.getenv("TELEGRAM_TOKEN")
CHANNEL_ID = os.getenv("CHANNEL_ID")
INTERVAL = int(os.getenv("POLL_INTERVAL", 3600))

bot = telebot.TeleBot(TOKEN)

# --- –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç ---
def get_exchange_rates():
    # –ó–¥–µ—Å—å –∏–º–∏—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö (–º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å API –±–∞–Ω–∫–∞)
    return {
        "USD": 12600,
        "EUR": 13400,
        "RUB": 130,
        "KZT": 27,
        "CNY": 1720
    }

# --- –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç ---
def get_crypto_rates():
    url = "https://api.coingecko.com/api/v3/simple/price"
    params = {"ids": "bitcoin,ethereum,toncoin,tether", "vs_currencies": "usd"}
    r = requests.get(url, params=params).json()
    return {
        "BTC": r["bitcoin"]["usd"],
        "ETH": r["ethereum"]["usd"],
        "TON": r["toncoin"]["usd"],
        "USDT": r["tether"]["usd"]
    }

# --- –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ ---
def format_message():
    rates = get_exchange_rates()
    crypto = get_crypto_rates()

    text = "üí± –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑ –≤ —á–∞—Å):\n\n"
    text += f"üá∫üá∏ USD: {rates['USD']} —Å—É–º\n"
    text += f"üá™üá∫ EUR: {rates['EUR']} —Å—É–º\n"
    text += f"üá∑üá∫ RUB: {rates['RUB']} —Å—É–º\n"
    text += f"üá∞üáø KZT: {rates['KZT']} —Å—É–º\n"
    text += f"üá®üá≥ CNY: {rates['CNY']} —Å—É–º\n\n"

    text += "ü™ô –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã:\n"
    text += f"‚Çø Bitcoin: {crypto['BTC']}$\n"
    text += f"Œû Ethereum: {crypto['ETH']}$\n"
    text += f"TON: {crypto['TON']}$\n"
    text += f"Tether (USDT): {crypto['USDT']}$\n"

    return text

# --- –¶–∏–∫–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ---
def updater():
    while True:
        try:
            msg = format_message()
            bot.send_message(CHANNEL_ID, msg)
        except Exception as e:
            print("–û—à–∏–±–∫–∞:", e)
        time.sleep(INTERVAL)

# --- –ó–∞–ø—É—Å–∫ ---
def run():
    Thread(target=updater, daemon=True).start()
    bot.infinity_polling()

if __name__ == "__main__":
    run()
